worker_processes auto;

events {
    worker_connections 1024;
}

http {
    
    upstream customerService {
        server customer:8001; # Customer service
    }

    upstream courseService {
        server courses:8002; # Product service
    }

    upstream codecampService {
        server codecamps:8003; # Shopping service
    }

    # include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        charset utf-8;
        server_name default_server;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /api/codeCamps/ {
            # rewrite ^/api/codeCamps/(.*) /$1 break;
            proxy_set_header Host $host;
            proxy_pass http://codecampService;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # proxy_cache_bypass $http_upgrade;
        }

        location /api/courses/ {
            # rewrite ^/api/courses/(.*) /$1 break;
            proxy_set_header Host $host;
            proxy_pass http://courseService;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # proxy_cache_bypass $http_upgrade;
        }

        location /api/ {
            # rewrite ^/api/(.*) /$1 break;
            proxy_set_header Host $host;
            proxy_pass http://customerService;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # proxy_cache_bypass $http_upgrade;
        }

        
    }
}


